{
  "hash": "7bfad0aefa360731a76ff90a9bf8e92f",
  "result": {
    "engine": "knitr",
    "markdown": "---\n\n---\n\n\n\n# Objetos no R\n\nO R tem 5 classes básicas (atômicas) de objetos:\\\n- character (exemplo: \"a\")\\\n- numeric: (exemplo: 3.5)\\\n- integer: (exemplo: 3)\\\n- logical: (exemplo: TRUE)\\\n- complex: (exemplo: (1 + 3i))\\\nA função class() informa qual a classe do objeto.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- \"a\"  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- 3.5  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- 3  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- as.integer(x)\nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- TRUE  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- (1 + 3i)  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"complex\"\n```\n\n\n:::\n:::\n\n\n\nOutros objetos armazenam os objetos atômicos:\\\n\\* Vetor: sequência de objetos atômicos de mesma classe (ex.: c(1,2,3)).\\\n\\* Fator: vetor de inteiros com rótulos/levels.\\\n\\* Matriz: vetor com duas dimensões (linhas e colunas); os objetos atômicos também são todos da mesma classe.\\\n\\* Lista: conjunto de vetores, matrizes e/ou dataframes; seus elementos não precisam ter o mesmo comprimento; geralmente os resultados das funções são armazenados em listas.\\\n\\* Dataframe: lista especial na qual todos os elementos têm o mesmo comprimento; os elementos podem ser de tipos básicos diferentes; geralmente os bancos de dados são armazenados como dataframes, nos quais os registros são as linhas e as variáveis são as colunas.\\\n\\* Função: conjunto de comandos que vão executar ordens específicas. Muitas funções já vêm nos pacotes básicos do R (instalados juntamente com o programa), várias outras são ativadas quando habilitamos pacotes/bibliotecas do R específicas, e também podemos criar as funções que precisarmos.\n\nQuando temos dúvidas sobre alguma função do R, temos várias opções de ajuda:\\\n\\* Documentação do R: help(\"nome_da_função\") ou ?nome_da_função.\\\n\\* Digitar no Google: \"r project função\".\\\n\\* Digitar no [stackoverflow](https://stackoverflow.com/): \"r project função\".\n\nPodemos também pesquisar pelos pacotes do R no [CRAN](https://cran.r-project.org/), no Google ou no [stackoverflow](https://stackoverflow.com/).\n\nPara instalar um pacote no R (apenas na primeira vez que for usar) usa-se a seguinte função: install.packages(“nome do pacote”). Para ativar o pacote a cada sessão do R: library(“nome do pacote”). Para saber quais pacotes estão ativados no momento: (.packages()).\n\n# Dataframe\n\nÉ um objeto muito importante do R porque geralmente nossos bancos de dados são armazenados como dataframes. São semelhantes a planilhas, em que as linhas correspondem a registros/observações e as colunas a variáveis.\\\nAlgumas funções úteis para lidar com os dataframes:\\\n\\* dim() - Número de linhas (registros) e de colunas (variáveis)\\\n\\* head() - Mostra as primeiras 6 linhas\\\n\\* tail() - Mostra as últimas 6 linhas\\\n\\* names() - Os nomes das colunas\\\n\\* str() - Estrutura do data.frame. Mostra, entre outras coisas, as classes de cada coluna\\\n\\* cbind() - Acopla duas tabelas lado a lado\\\n\\* rbind() - Empilha duas tabelas\n\n# Objetos no R\n\nO R tem 5 classes básicas (atômicas) de objetos:\\\n- character (exemplo: \"a\")\\\n- numeric: (exemplo: 3.5)\\\n- integer: (exemplo: 3)\\\n- logical: (exemplo: TRUE)\\\n- complex: (exemplo: (1 + 3i))\\\nA função class() informa qual a classe do objeto.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- \"a\"  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- 3.5  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- 3  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- as.integer(x)\nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- TRUE  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n\n```{.r .cell-code}\nx <- (1 + 3i)  \nclass(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"complex\"\n```\n\n\n:::\n:::\n\n\n\nOutros objetos armazenam os objetos atômicos:\\\n\\* Vetor: sequência de objetos atômicos de mesma classe (ex.: c(1,2,3)).\\\n\\* Fator: vetor de inteiros com rótulos/levels.\\\n\\* Matriz: vetor com duas dimensões (linhas e colunas); os objetos atômicos também são todos da mesma classe.\\\n\\* Lista: conjunto de vetores, matrizes e/ou dataframes; seus elementos não precisam ter o mesmo comprimento; geralmente os resultados das funções são armazenados em listas.\\\n\\* Dataframe: lista especial na qual todos os elementos têm o mesmo comprimento; os elementos podem ser de tipos básicos diferentes; geralmente os bancos de dados são armazenados como dataframes, nos quais os registros são as linhas e as variáveis são as colunas.\\\n\\* Função: conjunto de comandos que vão executar ordens específicas. Muitas funções já vêm nos pacotes básicos do R (instalados juntamente com o programa), várias outras são ativadas quando habilitamos pacotes/bibliotecas do R específicas, e também podemos criar as funções que precisarmos.\n\nQuando temos dúvidas sobre alguma função do R, temos várias opções de ajuda:\\\n\\* Documentação do R: help(\"nome_da_função\") ou ?nome_da_função.\\\n\\* Digitar no Google: \"r project função\".\\\n\\* Digitar no [stackoverflow](https://stackoverflow.com/): \"r project função\".\n\nPodemos também pesquisar pelos pacotes do R no [CRAN](https://cran.r-project.org/), no Google ou no [stackoverflow](https://stackoverflow.com/).\n\nPara instalar um pacote no R (apenas na primeira vez que for usar) usa-se a seguinte função: install.packages(“nome do pacote”). Para ativar o pacote a cada sessão do R: library(“nome do pacote”). Para saber quais pacotes estão ativados no momento: (.packages()).\n\n# Dataframe\n\nÉ um objeto muito importante do R porque geralmente nossos bancos de dados são armazenados como dataframes. São semelhantes a planilhas, em que as linhas correspondem a registros/observações e as colunas a variáveis.\\\nAlgumas funções úteis para lidar com os dataframes:\\\n\\* dim() - Número de linhas (registros) e de colunas (variáveis)\\\n\\* head() - Mostra as primeiras 6 linhas\\\n\\* tail() - Mostra as últimas 6 linhas\\\n\\* names() - Os nomes das colunas\\\n\\* str() - Estrutura do data.frame. Mostra, entre outras coisas, as classes de cada coluna\\\n\\* cbind() - Acopla duas tabelas lado a lado\\\n\\* rbind() - Empilha duas tabelas\n",
    "supporting": [
      "03-capitulo3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}